name: Continuous Integration and Delivery

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        node-version: [22.x, 23.x]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node ${{ matrix.jvm-version }}
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Simply test if the build is working
        run: npm run build
      - name: Lint
        run: npm run lint
  
  release:
    needs: build
    if: github.ref_name == github.event.repository.default_branch && !github.event.repository.fork
    permissions:
      packages: write
      contents: write
      issues: write
      pull-requests: write
    concurrency:
      group: release-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version: 23
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build website
        run: npm run build
        env:
          VITE_BACKEND_ENDPOINT: ${{ vars.BACKEND_ENDPOINT }}
          VITE_MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}
          VITE_FIREBASE_VAPID_KEY: ${{ secrets.FIREBASE_VAPID_KEY }}
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      - name: Create artifact
        run: tar -czf build.tar.gz -C dist .
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: website-build
          path: build.tar.gz
          retention-days: 1
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      - name: Deploy to DigitalOcean
        env:
          SSHPASS: ${{ secrets.DROPLET_PASSWORD }}
        run: |
          sshpass -e scp -o StrictHostKeyChecking=no build.tar.gz ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }}:/tmp/build.tar.gz
      - name: Extract and deploy on Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: 22
          script: |
            mkdir -p /var/www/html
            tar -xzf /tmp/build.tar.gz -C /var/www/html
            rm /tmp/build.tar.gz
      
  success:
    needs:
      - build
      - release
    if:
      >- # run if at least one needed job has failed or all needed jobs have not been cancelled
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    runs-on: ubuntu-24.04
    steps:
      - name: Verify no failures occurred in needed jobs
        # if there are failures, false is executed and the job fails.
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
